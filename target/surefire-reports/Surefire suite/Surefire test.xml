<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="8" hostname="Solvatives-MacBook-Air.local" failures="0" tests="4" name="Surefire test" time="0.061" errors="0" timestamp="2023-04-26T16:05:08 IST">
  <testcase classname="com.qa.BaseTest" name="@BeforeTest beforeTest" time="-1.682505308209E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;deviceName&amp;apos; is required by BeforeTest on method beforeTest but has not been marked @Optional or defined
">
      <![CDATA[org.testng.TestNGException: 
Parameter 'deviceName' is required by BeforeTest on method beforeTest but has not been marked @Optional or defined

... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest aftertest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest aftertest -->
  <testcase classname="com.qa.tests.ProductTests" name="validateProductOnProductsPage" time="0.0">
    <skipped/>
  </testcase> <!-- validateProductOnProductsPage -->
  <testcase classname="com.qa.tests.ProductTests" name="validateProductOnProductsdDetailPage" time="0.0">
    <skipped/>
  </testcase> <!-- validateProductOnProductsdDetailPage -->
  <testcase classname="com.qa.tests.LoginTests" name="InvalidUserName" time="0.0">
    <skipped/>
  </testcase> <!-- InvalidUserName -->
  <testcase classname="com.qa.tests.LoginTests" name="ValidUser" time="0.0">
    <skipped/>
  </testcase> <!-- ValidUser -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest aftertest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest aftertest -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest aftertest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest aftertest -->
  <testcase classname="com.qa.BaseTest" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.qa.BaseTest" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="com.qa.BaseTest" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.qa.BaseTest" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.qa.BaseTest" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="com.qa.BaseTest" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
</testsuite> <!-- Surefire test -->
