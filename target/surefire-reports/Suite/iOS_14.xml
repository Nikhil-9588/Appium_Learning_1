<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Solvatives-MacBook-Air.local" failures="0" tests="2" name="iOS_14" time="104.644" errors="0" timestamp="2023-05-01T19:09:47 IST">
  <testcase classname="com.qa.BaseTest" name="@BeforeTest beforeTest" time="80.46">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Error getting device API level. Original error: Error executing adbExec. Original error: &amp;apos;Command &amp;apos;/Users/nikhilkumargupta/Library/Android/sdk/platform-tools/adb -P 5037 -s emulator-5554 shell getprop ro.build.version.sdk&amp;apos; timed out after 20000ms&amp;apos;. Try to increase the 20000ms adb execution timeout represented by &amp;apos;adbExecTimeout&amp;apos; capability 
Host info: host: &amp;apos;Solvatives-MacBook-Air.local&amp;apos;, ip: &amp;apos;2401:4900:1c7b:421f:51b9:11c:710e:d82d%en0&amp;apos;
Build info: version: &amp;apos;4.9.0&amp;apos;, revision: &amp;apos;d7057100a6&amp;apos;
System info: os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;aarch64&amp;apos;, os.version: &amp;apos;13.3.1&amp;apos;, java.version: &amp;apos;17.0.6&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:appActivity=com.swaglabsmobileapp.SplashActivity, appium:appPackage=com.swaglabsmobileapp, appium:deviceName=Pixel_6_pro, appium:platformVersion=13, appium:automationName=UiAutomator2, appium:chromeDriverPort=11000, platformName=ANDROID, appium:systemPort=10000, appium:udid=emulator-5554}], desiredCapabilities=Capabilities {appActivity: com.swaglabsmobileapp.Splas..., appPackage: com.swaglabsmobileapp, appium:deviceName: Pixel_6_pro, appium:platformVersion: 13, automationName: UiAutomator2, chromeDriverPort: 11000, platformName: ANDROID, systemPort: 10000, udid: emulator-5554}}]
Capabilities {appActivity: com.swaglabsmobileapp.Splas..., appPackage: com.swaglabsmobileapp, appium:deviceName: Pixel_6_pro, appium:platformVersion: 13, automationName: UiAutomator2, chromeDriverPort: 11000, platformName: ANDROID, systemPort: 10000, udid: emulator-5554}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Error getting device API level. Original error: Error executing adbExec. Original error: 'Command '/Users/nikhilkumargupta/Library/Android/sdk/platform-tools/adb -P 5037 -s emulator-5554 shell getprop ro.build.version.sdk' timed out after 20000ms'. Try to increase the 20000ms adb execution timeout represented by 'adbExecTimeout' capability 
Host info: host: 'Solvatives-MacBook-Air.local', ip: '2401:4900:1c7b:421f:51b9:11c:710e:d82d%en0'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '13.3.1', java.version: '17.0.6'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:appActivity=com.swaglabsmobileapp.SplashActivity, appium:appPackage=com.swaglabsmobileapp, appium:deviceName=Pixel_6_pro, appium:platformVersion=13, appium:automationName=UiAutomator2, appium:chromeDriverPort=11000, platformName=ANDROID, appium:systemPort=10000, appium:udid=emulator-5554}], desiredCapabilities=Capabilities {appActivity: com.swaglabsmobileapp.Splas..., appPackage: com.swaglabsmobileapp, appium:deviceName: Pixel_6_pro, appium:platformVersion: 13, automationName: UiAutomator2, chromeDriverPort: 11000, platformName: ANDROID, systemPort: 10000, udid: emulator-5554}}]
Capabilities {appActivity: com.swaglabsmobileapp.Splas..., appPackage: com.swaglabsmobileapp, appium:deviceName: Pixel_6_pro, appium:platformVersion: 13, automationName: UiAutomator2, chromeDriverPort: 11000, platformName: ANDROID, systemPort: 10000, udid: emulator-5554}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:194)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:262)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:80)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:92)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:117)
at com.qa.BaseTest.beforeTest(BaseTest.java:262)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest aftertest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest aftertest -->
  <testcase classname="com.qa.tests.ProductTests" name="validateProductOnProductsPage" time="5.895"/>
  <testcase classname="com.qa.tests.ProductTests" name="validateProductOnProductsdDetailPage" time="6.064"/>
</testsuite> <!-- iOS_14 -->
